name: Load Test with k6 on ECS

on:
  workflow_dispatch:
    inputs:
      script_name:
        description: "Script de teste (dentro do container)"
        required: true
        default: "load-test.js"
      rps_target_1:
        description: "RPS RAMP_UP"
        required: true
        default: "1"
      duration_target_1:
        description: "Duração RAMP_UP"
        required: true
        default: "3s"
      rps_target_2:
        description: "RPS TARGET"
        required: true
        default: "3"
      duration_target_2:
        description: "Duração TARGET"
        required: true
        default: "10s"
      rps_target_3:
        description: "RPS RAMP_DOWN"
        required: true
        default: "1"
      duration_target_3:
        description: "Duração RAMP_DOWN"
        required: true
        default: "3s"

permissions:
  id-token: write
  contents: write

jobs:
  load-test:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Download k6_infra_values.env from S3
        run: |
          aws s3 cp s3://k6-loadtest-config/k6_infra_values.env .
          source ./k6_infra_values.env

      - name: Run k6 task on ECS
        run: |
          aws ecs run-task \
            --cluster "$CLUSTER_NAME" \
            --launch-type FARGATE \
            --task-definition "$TASK_DEFINITION_ARN" \
            --network-configuration "awsvpcConfiguration={subnets=$SUBNET_IDS,assignPublicIp=ENABLED}" \
            --overrides '{
              "containerOverrides": [
                {
                  "name": "k6",
                  "command": [
                    "run",
                    "/scripts/${{ github.event.inputs.script_name }}",
                    "--env", "RPS_RAMP_UP=${{ github.event.inputs.rps_target_1 }}",
                    "--env", "DURATION_RAMP_UP=${{ github.event.inputs.duration_target_1 }}",
                    "--env", "RPS_TARGET=${{ github.event.inputs.rps_target_2 }}",
                    "--env", "DURATION_TARGET=${{ github.event.inputs.duration_target_2 }}",
                    "--env", "RPS_RAMP_DOWN=${{ github.event.inputs.rps_target_3 }}",
                    "--env", "DURATION_RAMP_DOWN=${{ github.event.inputs.duration_target_3 }}"
                  ]
                }
              ]
            }'

      - name: Upload Report (optional)
        if: always()
        run: |
          mkdir -p results
          echo "<html><body><h1>Relatório gerado pela task ECS</h1></body></html>" > results/index_load_test.html

      - name: Upload k6 Report as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: k6-load-test-report
          path: results/index_load_test.html
          retention-days: 7

  deploy-pages:
    needs: load-test
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download k6 Report Artifact
        uses: actions/download-artifact@v4
        with:
          name: k6-load-test-report
          path: gh-pages 

      - name: Prepare Report for GitHub Pages
        run: |
          mv gh-pages/index_load_test.html gh-pages/index.html

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: gh-pages
          keep_files: false
