name: Run k6 Load Test on ECS

on:
  workflow_dispatch:
    inputs:
      script_name:
        description: "Script de teste (dentro do container)"
        required: true
        default: "load-test.js"
      rps_target_1:
        description: "RPS RAMP_UP"
        required: true
        default: "1"
      duration_target_1:
        description: "Duração RAMP_UP"
        required: true
        default: "3s"
      rps_target_2:
        description: "RPS TARGET"
        required: true
        default: "3"
      duration_target_2:
        description: "Duração TARGET"
        required: true
        default: "10s"
      rps_target_3:
        description: "RPS RAMP_DOWN"
        required: true
        default: "1"
      duration_target_3:
        description: "Duração RAMP_DOWN"
        required: true
        default: "3s"

jobs:
  run-load-test:
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Run ECS Task
        uses: aws-actions/amazon-ecs-run-task@v1
        with:
          launch-type: FARGATE
          cluster: ${{ secrets.CLUSTER_NAME }}
          task-definition: ${{ secrets.TASK_DEFINITION_ARN }}
          network-configuration: awsvpcConfiguration={subnets=${{ secrets.PUBLIC_SUBNETS }},securityGroups=${{ secrets.SECURITY_GROUPS }},assignPublicIp="ENABLED"}
          overrides: |
            {
              "containerOverrides": [
                {
                  "name": "k6",
                  "command": [
                    "run",
                    "/scripts/${{ github.event.inputs.script_name }}",
                    "--env", "RPS_RAMP_UP=${{ github.event.inputs.rps_target_1 }}",
                    "--env", "DURATION_RAMP_UP=${{ github.event.inputs.duration_target_1 }}",
                    "--env", "RPS_TARGET=${{ github.event.inputs.rps_target_2 }}",
                    "--env", "DURATION_TARGET=${{ github.event.inputs.duration_target_2 }}",
                    "--env", "RPS_RAMP_DOWN=${{ github.event.inputs.rps_target_3 }}",
                    "--env", "DURATION_RAMP_DOWN=${{ github.event.inputs.duration_target_3 }}"
                  ]
                }
              ]
            }
